#!/usr/bin/python3

# -------------------------------------------------------------------------------
# Convert dolfin's xml format to hdf5 format 
# Dependency: 1) FEniCS
# Author: Chayut Teeraratkul
# -------------------------------------------------------------------------------


import sys
import fenics as fe
import os
def xml2h5(meshFile,savePVD=False):

    # -- Convert a .xml mesh file into h5 format with the same file name.
    print("Converting %s to hdf5 format" %(meshFile))
    parsedMeshName = meshFile.split("/")
    if len(parsedMeshName) == 1: # No "/" in the path name meaning file is in the current directory
        meshFilePath = "."
    else:
        meshFilePath = parsedMeshName[0]

    # -- Recover the path of the meshFile
    for i in range(1,len(parsedMeshName)-1):
        meshFilePath += "/"+parsedMeshName[i]
    meshFilePath += "/"

    # -- Get mesh of the same name with h5 extension instead of xml
    mesh_xml = parsedMeshName[-1]
    meshName = mesh_xml.split(".")[0]
    mesh_h5 = meshName+".h5"
    meshFilePath_h5 = meshFilePath+mesh_h5

    # -- Convert xml to h5
    mesh = fe.Mesh(meshFile)
    hdf = fe.HDF5File(mesh.mpi_comm(), meshFilePath_h5, "w")
    hdf.write(mesh, "/mesh")
    if savePVD:
        fe.File(meshName+".pvd") << mesh
        print("Mesh pvd is saved to",(meshName+".pvd"))
    print("Mesh written at %s" %(meshFilePath_h5))

    # -- Check if facet and physical regions exist. If so, save them to meshFilePath_h5
    facetRegion =  meshFilePath + meshName + "_facet_region.xml"
    physicalRegion = meshFilePath + meshName + "_physical_region.xml"
    if os.path.isfile(facetRegion):
        boundaries = fe.MeshFunction("size_t", mesh, facetRegion)
        hdf.write(boundaries, "/boundaries")
        print("Boundaries written at %s" %(meshFilePath_h5))
        if savePVD:
            fe.File(meshName+"_boundaries.pvd") << boundaries
            print("Boundaries pvd is saved to",(meshName+"_boundaries.pvd"))
    if os.path.isfile(physicalRegion):
        subdomain = fe.MeshFunction("size_t", mesh, physicalRegion)
        hdf.write(subdomain, "/subdomains")
        print("Subdomains written at %s" %(meshFilePath_h5))
        if savePVD:
            fe.File(meshName+"_subdomains.pvd") << boundaries
            print("Subdomains pvd is saved to",(meshName+"_subdomains.pvd"))
    hdf.close()

if '-pvd' in sys.argv:
    sys.argv.remove('-pvd')
    saveout = True
else:
    saveout = False
for i in range(1,len(sys.argv)):
    meshname_xml = sys.argv[i]
    xml2h5(meshname_xml,savePVD=saveout)

